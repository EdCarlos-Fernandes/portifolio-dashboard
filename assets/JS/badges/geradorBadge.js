const logosList = [
    "1001tracklists",
    "1password",     
    "3m",
    "42",
    "4chan",
    "4d",
    "500px",
    "abbott",
    "abbrobotstudio",
    "abbvie",
    "abletonlive",
    "aboutdotme",
    "abstract",
    "academia",
    "accenture",
    "acclaim",
    "accusoft",
    "acer",
    "acm",
    "actigraph",
    "activision",
    "acura",
    "adafruit",
    "adblock",
    "adblockplus",
    "addthis",
    "adguard",
    "adidas",
    "adminer",
    "adobe",
    "adobeacrobatreader",
    "adobeaftereffects",
    "adobeaudition",
    "adobecreativecloud",
    "adobedreamweaver",
    "adobefonts",
    "adobeillustrator",
    "adobeindesign",
    "adobelightroom",
    "adobelightroomclassic",
    "adobephotoshop",
    "adobepremierepro",
    "adobexd",
    "adonisjs",
    "adp",
    "adroll",
    "adyen",
    "aerlingus",
    "aeroflot",
    "aeromexico",
    "aerospike",
    "aew",
    "affine",
    "affinity",
    "affinitydesigner",
    "affinityphoto",
    "affinitypublisher",
    "aframe",
    "agora",
    "aib",
    "aidungeon",
    "aiohttp",
    "aiqfome",
    "airasia",
    "airbnb",
    "airbrakedotio",
    "airbus",
    "airbyte",
    "aircall",
    "aircanada",
    "airchina",
    "airfrance",
    "airindia",
    "airplayaudio",
    "airplayvideo",
    "airtable",
    "ajv",
    "akamai",
    "alacritty",
    "albertheijn",
    "alchemy",
    "aldinord",
    "aldisud",
    "alfaromeo",
    "alfred",
    "algolia",
    "algorand",
    "alibabacloud",
    "alibabadotcom",
    "aliexpress",
    "alipay",
    "allegro",
    "alliedmodders",
    "allocine",
    "alltrails",
    "alpinedotjs",
    "alpinelinux",
    "alteryx",
    "altiumdesigner",
    "alwaysdata",
    "amazon",
    "amazonalexa",
    "amazonapigateway",
    "amazonaws",
    "amazoncloudwatch",
    "amazondynamodb",
    "amazonec2",
    "amazonecs",
    "amazoneks",
    "amazonfiretv",
    "amazongames",
    "amazoniam",
    "amazonlumberyard",
    "amazonluna",
    "amazonpay",
    "amazonprime",
    "amazonrds",
    "amazonredshift",
    "amazons3",
    "amazonsqs",
    "amd",
    "ameba",
    "americanairlines",
    "americanexpress",
    "amg",
    "amp",
    "amul",
    "ana",
    "anaconda",
    "analogue",
    "anchor",
    "andela",
    "android",
    "androidauto",
    "androidstudio",
    "angellist",
    "angular",
    "angularjs",
    "angularuniversal",
    "anilist",
    "ansible",
    "answer",
    "ansys",
    "anta",
    "antdesign",
    "antena3",
    "anydesk",
    "aol",
    "apache",
    "apacheairflow",
    "apacheant",
    "apachecassandra",
    "apachecloudstack",
    "apachecordova",
    "apachecouchdb",
    "apachedruid",
    "apacheecharts",
    "apacheflink",
    "apachegroovy",
    "apachehadoop",
    "apachehive",
    "apachejmeter",
    "apachekafka",
    "apachekylin",
    "apachemaven",
    "apachenetbeanside",
    "apacheopenoffice",
    "apacheparquet",
    "apachepulsar",
    "apacherocketmq",
    "apachesolr",
    "apachespark",
    "apachestorm",
    "apachetomcat",
    "aparat",
    "apifox",
    "apollographql",
    "apostrophe",
    "appian",
    "apple",
    "applearcade",
    "applemusic",
    "applenews",
    "applepay",
    "applepodcasts",
    "appletv",
    "appsignal",
    "appsmith",
    "appstore",
    "appveyor",
    "appwrite",
    "aqua",
    "aral",
    "arangodb",
    "arcgis",
    "archicad",
    "archiveofourown",
    "archlinux",
    "ardour",
    "arduino",
    "argo",
    "argos",
    "ariakit",
    "arkecosystem",
    "arlo",
    "arm",
    "arstechnica",
    "artifacthub",
    "artixlinux",
    "artstation",
    "arxiv",
    "asana",
    "asciidoctor",
    "asciinema",
    "asda",
    "aseprite",
    "askfm",
    "askubuntu",
    "assemblyscript",
    "astonmartin",
    "astro",
    "asus",
    "atandt",
    "atari",
    "atlassian",
    "atom",
    "auchan",
    "audacity",
    "audi",
    "audible",
    "audioboom",
    "audiomack",
    "audiotechnica",
    "aurelia",
    "auth0",
    "authelia",
    "authy",
    "autodesk",
    "autohotkey",
    "automattic",
    "autoprefixer",
    "avajs",
    "avast",
    "awesomelists",
    "awesomewm",
    "awsamplify",
    "awsfargate",
    "awslambda",
    "axios",
    "azureartifacts",
    "azuredataexplorer",
    "azuredevops",
    "azurefunctions",
    "azurepipelines",
    "babel",
    "babylondotjs",
    "backblaze",
    "backbonedotjs",
    "backendless",
    "backstage",
    "badgr",
    "badoo",
    "baidu",
    "bamboo",
    "bandcamp",
    "bandlab",
    "bandrautomation",
    "bandsintown",
    "bankofamerica",
    "barclays",
    "baremetrics",
    "basecamp",
    "bastyon",
    "bata",
    "bathasu",
    "battledotnet",
    "bbc",
    "bbciplayer",
    "beatport",
    "beats",
    "beatsbydre",
    "behance",
    "beijingsubway",
    "bem",
    "bentley",
    "bento",
    "bentoml",
    "betfair",
    "bigbasket",
    "bigbluebutton",
    "bigcartel",
    "bigcommerce",
    "bilibili",
    "billboard",
    "bim",
    "binance",
    "biolink",
    "bisecthosting",
    "bit",
    "bitbucket",
    "bitcoin",
    "bitcoincash",
    "bitcoinsv",
    "bitdefender",
    "bitly",
    "bitrise",
    "bitwarden",
    "bitwig",
    "blackberry",
    "blazemeter",
    "blazor",
    "blender",
    "blockchaindotcom",
    "blogger",
    "bloglovin",
    "blueprint",
    "bluetooth",
    "bmcsoftware",
    "bmw",
    "boardgamegeek",
    "boehringeringelheim",
    "boeing",
    "bombardier",
    "bookalope",
    "bookbub",
    "bookmeter",
    "bookmyshow",
    "bookstack",
    "boost",
    "boots",
    "bootstrap",
    "borgbackup",
    "bosch",
    "bose",
    "botblecms",
    "boulanger",
    "bower",
    "box",
    "boxysvg",
    "brandfolder",
    "brave",
    "breaker",
    "brevo",
    "britishairways",
    "broadcom",
    "bspwm",
    "bt",
    "buddy",
    "budibase",
    "buefy",
    "buffer",
    "bugatti",
    "bugcrowd",
    "bugsnag",
    "buildkite",
    "bukalapak",
    "bulma",
    "bun",
    "bunq",
    "burgerking",
    "burton",
    "buymeacoffee",
    "buzzfeed",
    "bvg",
    "byjus",
    "byte",
    "bytedance",
    "c",
    "cachet",
    "caddy",
    "cadillac",
    "cafepress",
    "caffeine",
    "cairographics",
    "cairometro",
    "cakephp",
    "campaignmonitor",
    "canonical",
    "canva",
    "capacitor",
    "cardano",
    "carrefour",
    "carthrottle",
    "carto",
    "cashapp",
    "castbox",
    "castorama",
    "castro",
    "caterpillar",
    "cbs",
    "cdprojekt",
    "celery",
    "centos",
    "ceph",
    "cesium",
    "chai",
    "chainguard",
    "chainlink",
    "chakraui",
    "channel4",
    "chartdotjs",
    "chartmogul",
    "chase",
    "chatbot",
    "chatwoot",
    "checkio",
    "checkmarx",
    "checkmk",
    "chef",
    "chemex",
    "chevrolet",
    "chianetwork",
    "chinaeasternairlines",
    "chinasouthernairlines",
    "chocolatey",
    "chromecast",
    "chrysler",
    "chupachups",
    "cilium",
    "cinema4d",
    "circle",
    "circleci",
    "circuitverse",
    "cirrusci",
    "cisco",
    "citrix",
    "citroen",
    "civicrm",
    "civo",
    "ckeditor4",
    "clarifai",
    "claris",
    "clickhouse",
    "clickup",
    "clion",
    "cliqz",
    "clockify",
    "clojure",
    "cloud66",
    "cloudbees",
    "cloudcannon",
    "cloudera",
    "cloudflare",
    "cloudflarepages",
    "cloudfoundry",
    "cloudsmith",
    "cloudways",
    "clubhouse",
    "clyp",
    "cmake",
    "cncf",
    "cnn",
    "cocacola",
    "cockpit",
    "cockroachlabs",
    "cocoapods",
    "cocos",
    "coda",
    "codacy",
    "codeberg",
    "codecademy",
    "codeceptjs",
    "codechef",
    "codeclimate",
    "codecov",
    "codefactor",
    "codeforces",
    "codeigniter",
    "codemagic",
    "codemirror",
    "codenewbie",
    "codepen",
    "codeproject",
    "codereview",
    "codersrank",
    "coderwall",
    "codesandbox",
    "codeship",
    "codesignal",
    "codestream",
    "codewars",
    "codingame",
    "codingninjas",
    "codio",
    "coffeescript",
    "cognizant",
    "coil",
    "coinbase",
    "coinmarketcap",
    "commerzbank",
    "commitlint",
    "commodore",
    "commonworkflowlanguage",
    "compilerexplorer",
    "composer",
    "comsol",
    "conan",
    "concourse",
    "condaforge",
    "conekta",
    "confluence",
    "construct3",
    "consul",
    "contactlesspayment",
    "containerd",
    "contao",
    "contentful",
    "conventionalcommits",
    "convertio",
    "cookiecutter",
    "coop",
    "cora",
    "coronaengine",
    "coronarenderer",
    "corsair",
    "couchbase",
    "counterstrike",
    "countingworkspro",
    "coursera",
    "coveralls",
    "cpanel",
    "cplusplus",
    "craftcms",
    "cratedb",
    "crayon",
    "creality",
    "createreactapp",
    "creativecommons",
    "creativetechnology",
    "credly",
    "crehana",
    "criticalrole",
    "crowdin",
    "crowdsource",
    "crunchbase",
    "crunchyroll",
    "cryengine",
    "crystal",
    "csharp",
    "css3",
    "cssmodules",
    "csswizardry",
    "cts",
    "cucumber",
    "cultura",
    "curl",
    "curseforge",
    "cycling74",
    "cypress",
    "cytoscapedotjs",
    "d",
    "d3dotjs",
    "dacia",
    "daf",
    "dailymotion",
    "daimler",
    "daisyui",
    "dapr",
    "darkreader",
    "dart",
    "darty",
    "daserste",
    "dash",
    "dashlane",
    "dask",
    "dassaultsystemes",
    "databricks",
    "datacamp",
    "datadog",
    "datadotai",
    "datagrip",
    "dataiku",
    "datastax",
    "dataverse",
    "datocms",
    "datto",
    "dazn",
    "dblp",
    "dbt",
    "dcentertainment",
    "debian",
    "dedge",
    "deepin",
    "deepnote",
    "deezer",
    "delicious",
    "deliveroo",
    "dell",
    "delonghi",
    "delphi",
    "delta",
    "deno",
    "denon",
    "dependabot",
    "derspiegel",
    "designernews",
    "deutschebahn",
    "deutschebank",
    "devdotto",
    "devexpress",
    "deviantart",
    "devpost",
    "devrant",
    "dgraph",
    "dhl",
    "diagramsdotnet",
    "dialogflow",
    "diaspora",
    "digg",
    "digikeyelectronics",
    "digitalocean",
    "dior",
    "directus",
    "discogs",
    "discord",
    "discourse",
    "discover",
    "disqus",
    "disroot",
    "django",
    "dlib",
    "dlna",
    "dm",
    "docker",
    "docsdotrs",
    "docusign",
    "dogecoin",
    "doi",
    "dolby",
    "doordash",
    "dotenv",
    "dotnet",
    "douban",
    "doubanread",
    "dovecot",
    "dpd",
    "dragonframe",
    "draugiemdotlv",
    "dribbble",
    "drone",
    "drooble",
    "dropbox",
    "drupal",
    "dsautomobiles",
    "dts",
    "dtube",
    "ducati",
    "duckdb",
    "duckduckgo",
    "dungeonsanddragons",
    "dunked",
    "duolingo",
    "dvc",
    "dwavesystems",
    "dwm",
    "dynamics365",
    "dynatrace",
    "e",
    "e3",
    "ea",
    "eagle",
    "easyeda",
    "easyjet",
    "ebay",
    "ebox",
    "eclipseadoptium",
    "eclipseche",
    "eclipseide",
    "eclipsejetty",
    "eclipsemosquitto",
    "eclipsevertdotx",
    "edeka",
    "editorconfig",
    "edotleclerc",
    "edx",
    "egghead",
    "egnyte",
    "eightsleep",
    "elastic",
    "elasticcloud",
    "elasticsearch",
    "elasticstack",
    "elavon",
    "electron",
    "electronbuilder",
    "electronfiddle",
    "element",
    "elementary",
    "elementor",
    "eleventy",
    "elgato",
    "elixir",
    "eljueves",
    "ello",
    "elm",
    "elsevier",
    "embarcadero",
    "emberdotjs",
    "emby",
    "emirates",
    "emlakjet",
    "empirekred",
    "engadget",
    "enpass",
    "enterprisedb",
    "envato",
    "envoyproxy",
    "epel",
    "epicgames",
    "epson",
    "equinixmetal",
    "erlang",
    "esbuild",
    "esea",
    "eslgaming",
    "eslint",
    "esphome",
    "espressif",
    "esri",
    "etcd",
    "ethereum",
    "ethiopianairlines",
    "etihadairways",
    "etsy",
    "eventbrite",
    "eventstore",
    "evernote",
    "exercism",
    "exordo",
    "exoscale",
    "expensify",
    "expertsexchange",
    "expo",
    "express",
    "expressvpn",
    "eyeem",
    "f1",
    "f5",
    "facebook",
    "facebookgaming",
    "facebooklive",
    "faceit",
    "facepunch",
    "falcon",
    "fampay",
    "fandango",
    "fandom",
    "fanfou",
    "fantom",
    "fareharbor",
    "farfetch",
    "fastapi",
    "fastify",
    "fastlane",
    "fastly",
    "fathom",
    "fauna",
    "favro",
    "fdroid",
    "feathub",
    "fedex",
    "fedora",
    "feedly",
    "ferrari",
    "ferrarinv",
    "ferretdb",
    "ffmpeg",
    "fi",
    "fiat",
    "fidoalliance",
    "fifa",
    "fig",
    "figma",
    "figshare",
    "fila",
    "files",
    "filezilla",
    "fing",
    "firebase",
    "fireflyiii",
    "firefox",
    "firefoxbrowser",
    "fireship",
    "firewalla",
    "first",
    "fitbit",
    "fite",
    "fivem",
    "fiverr",
    "flask",
    "flat",
    "flathub",
    "flatpak",
    "flattr",
    "flickr",
    "flipboard",
    "flipkart",
    "floatplane",
    "flood",
    "fluentbit",
    "fluentd",
    "flutter",
    "fluxus",
    "flyway",
    "fmod",
    "fnac",
    "folium",
    "fonoma",
    "fontawesome",
    "fontbase",
    "fontforge",
    "foodpanda",
    "ford",
    "forestry",
    "forgejo",
    "formstack",
    "fortinet",
    "fortran",
    "fossa",
    "fossilscm",
    "foursquare",
    "foursquarecityguide",
    "fox",
    "foxtel",
    "fozzy",
    "framer",
    "framework7",
    "franprix",
    "fraunhofergesellschaft",
    "freebsd",
    "freecodecamp",
    "freedesktopdotorg",
    "freelancer",
    "freenas",
    "freepik",
    "frontendmentor",
    "frontify",
    "fsecure",
    "fsharp",
    "fugacloud",
    "fujifilm",
    "fujitsu",
    "funimation",
    "furaffinity",
    "furrynetwork",
    "futurelearn",
    "g2",
    "g2a",
    "gameandwatch",
    "gamedeveloper",
    "gamejolt",
    "gamemaker",
    "garmin",
    "gatling",
    "gatsby",
    "gdal",
    "geant",
    "geeksforgeeks",
    "generalelectric",
    "generalmotors",
    "genius",
    "gentoo",
    "geocaching",
    "gerrit",
    "ghost",
    "ghostery",
    "gimp",
    "giphy",
    "git",
    "gitbook",
    "gitea",
    "gitee",
    "gitextensions",
    "github",
    "githubactions",
    "githubpages",
    "githubsponsors",
    "gitignoredotio",
    "gitkraken",
    "gitlab",
    "gitlfs",
    "gitpod",
    "gitter",
    "glassdoor",
    "glitch",
    "globus",
    "gmail",
    "gnome",
    "gnometerminal",
    "gnu",
    "gnubash",
    "gnuemacs",
    "gnuicecat",
    "gnuprivacyguard",
    "gnusocial",
    "go",
    "gocd",
    "godaddy",
    "godotengine",
    "gofundme",
    "gogdotcom",
    "goland",
    "goldenline",
    "goodreads",
    "google",
    "googleadmob",
    "googleads",
    "googleadsense",
    "googleanalytics",
    "googleappsscript",
    "googleassistant",
    "googlecalendar",
    "googlecardboard",
    "googlechat",
    "googlechrome",
    "googleclassroom",
    "googlecloud",
    "googlecolab",
    "googlecontaineroptimizedos",
    "googledocs",
    "googledomains",
    "googledrive",
    "googleearth",
    "googlefit",
    "googlefonts",
    "googleforms",
    "googlehangouts",
    "googlehome",
    "googlekeep",
    "googlelens",
    "googlemaps",
    "googlemarketingplatform",
    "googlemeet",
    "googlemessages",
    "googlemybusiness",
    "googlenearby",
    "googlenews",
    "googleoptimize",
    "googlepay",
    "googlephotos",
    "googleplay",
    "googlepodcasts",
    "googlescholar",
    "googlesearchconsole",
    "googlesheets",
    "googlestreetview",
    "googletagmanager",
    "googletranslate",
    "gotomeeting",
    "grab",
    "gradle",
    "grafana",
    "grammarly",
    "grandfrais",
    "graphql",
    "grav",
    "gravatar",
    "graylog",
    "greenhouse",
    "greensock",
    "griddotai",
    "gridsome",
    "groupme",
    "groupon",
    "grubhub",
    "grunt",
    "gsk",
    "gstreamer",
    "gtk",
    "guangzhoumetro",
    "guilded",
    "gulp",
    "gumroad",
    "gumtree",
    "gunicorn",
    "gurobi",
    "gutenberg",
    "h3",
    "habr",
    "hackaday",
    "hackclub",
    "hackerearth",
    "hackernoon",
    "hackerone",
    "hackerrank",
    "hackster",
    "hackthebox",
    "handlebarsdotjs",
    "handshake",
    "handshake_protocol",
    "happycow",
    "harbor",
    "harmonyos",
    "hashicorp",
    "hashnode",
    "haskell",
    "hasura",
    "hatenabookmark",
    "haveibeenpwned",
    "haxe",
];

function toggleLogoSelector() {
    const logoSelector = document.getElementById("logoSelector");
    const addLogoCheckbox = document.getElementById("addLogoCheckbox");
    if (addLogoCheckbox.checked) {
        logoSelector.style.display = "block";
    } else {
        logoSelector.style.display = "none";
    }
    generateBadge();
}

function generateBadge() {
    const badgeText = document.getElementById("badgeText").value.replace(/[/]/g, '_');
    const badgeText2 = document.getElementById("badgeText2").value.replace(/[/]/g, '_');
    const badgeStyle = document.getElementById("badgeStyle").value;
    const badgeColor = document.getElementById("badgeColor").value.substring(1); // Remove o símbolo '#'
    const badgeLogoCor = document.getElementById("badgeLogoCor").value.substring(1);
    const badgeColor2 = document.getElementById("badgeColor2").value.substring(1);
    const addLogoCheckbox = document.getElementById("addLogoCheckbox");
    const comNomeCheckbox = document.getElementById("addLogoCheckbox2");
    const semNomeCheckbox = document.getElementById("addLogoCheckbox3");
    const badgeLogo = document.getElementById("badgeLogo").value;
    const badgeLink = document.getElementById("badgeLink").value;
    let badgeURL;

    if (addLogoCheckbox.checked && badgeLogo !== "") {
        if (comNomeCheckbox.checked) {
            if (badgeText2 !== "" || badgeText2 !== "") {
                badgeURL = `https://img.shields.io/badge/${encodeURIComponent(badgeLogo)}-${encodeURIComponent(badgeText2)}-${badgeColor}?style=${badgeStyle}&logo=${badgeLogo}&logoColor=${badgeLogoCor}&labelColor=${badgeColor2}&link=${badgeLink}`;
            } else {
                badgeURL = `https://img.shields.io/badge/${encodeURIComponent(badgeLogo)}-${badgeColor}?style=${badgeStyle}&logo=${badgeLogo}&logoColor=${badgeLogoCor}&labelColor=${badgeColor2}&link=${badgeLink}`;
            }
        } else if (semNomeCheckbox.checked) {
            if (badgeText !== "" || badgeText2 !== "") {
                badgeURL = `https://img.shields.io/badge/${encodeURIComponent(badgeText)}-${encodeURIComponent(badgeText2)}-${badgeColor}?style=${badgeStyle}&logo=${badgeLogo}&logoColor=${badgeLogoCor}&labelColor=${badgeColor2}&link=${badgeLink}`;
            } else {
                badgeURL = `https://img.shields.io/badge/${encodeURIComponent(badgeLogo)}-${badgeColor}?style=${badgeStyle}&logo=${badgeLogo}&logoColor=${badgeLogoCor}&labelColor=${badgeColor2}&link=${badgeLink}`;
            }
        } else {
            badgeURL = `https://img.shields.io/badge/${encodeURIComponent(badgeLogo)}-${badgeColor}?style=${badgeStyle}&logo=${badgeLogo}&logoColor=${badgeLogoCor}&labelColor=${badgeColor2}&link=${badgeLink}`;
        }
    } else {
        if (badgeText !== "" || badgeText2 !== "") {
            badgeURL = `https://img.shields.io/badge/${encodeURIComponent(badgeText)}-${encodeURIComponent(badgeText2)}-${badgeColor}?style=${badgeStyle}&labelColor=${badgeColor2}&link=${badgeLink}`;
        } else {
            badgeURL = "";
        }
    }

    const imgElement = document.createElement('img');
    imgElement.setAttribute('src', badgeURL);
    document.getElementById("badgeCriado").innerHTML = '';
    document.getElementById("badgeCriado").appendChild(imgElement);
}

function createLogoOptions() {
    const logoSelector = document.getElementById("badgeLogo");
    logosList.forEach(logo => {
        const optionElement = document.createElement("option");
        optionElement.value = logo;
        optionElement.style.color = 'gray';
        optionElement.textContent = logo;
        logoSelector.appendChild(optionElement);
    });
}

function toggleComNome() {
    const comNomeCheckbox = document.getElementById("addLogoCheckbox2");
    const semNomeCheckbox = document.getElementById("addLogoCheckbox3");
    if (comNomeCheckbox.checked) {
        semNomeCheckbox.checked = false;
    }
}

function toggleSemNome() {
    const comNomeCheckbox = document.getElementById("addLogoCheckbox2");
    const semNomeCheckbox = document.getElementById("addLogoCheckbox3");
    if (semNomeCheckbox.checked) {
        comNomeCheckbox.checked = false;
    }
}

document.getElementById("downloadPNGButton").addEventListener("click", function() {
    const badgeCriado = document.getElementById("badgeCriado");

    // Verifica se o badge foi criado antes de prosseguir
    if (!badgeCriado.hasChildNodes()) {
        alert("Crie o badge antes de fazer o download!");
        return;
    }

    const imgElement = badgeCriado.getElementsByTagName("img")[0];
    const img = new Image();
    img.crossOrigin = "anonymous";
    img.onload = function() {
        // Cria um elemento canvas temporário
        const canvas = document.createElement("canvas");
        const context = canvas.getContext("2d");

        canvas.width = img.width;
        canvas.height = img.height;

        // Desenha a imagem do badge no canvas
        context.drawImage(img, 0, 0);

        const downloadLink = document.createElement("a");
        downloadLink.download = "badge.png";
        downloadLink.href = canvas.toDataURL("image/png");

        // Clica automaticamente no link para iniciar o download
        downloadLink.click();
    };

    // Define a URL da nova imagem com a mesma URL da imagem do badge
    img.src = imgElement.src;
});




document.getElementById("downloadSVGButton").addEventListener("click", function() {
    const badgeCriado = document.getElementById("badgeCriado");

    if (!badgeCriado.hasChildNodes()) {
        alert("Crie o badge antes de fazer o download!");
        return;
    }

    const imgElement = badgeCriado.getElementsByTagName("img")[0];

    const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
    svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
    svg.setAttribute("width", imgElement.width);
    svg.setAttribute("height", imgElement.height);
    svg.setAttribute("viewBox", `0 0 ${imgElement.width} ${imgElement.height}`);
    svg.setAttribute("role", "img");
    svg.setAttribute("aria-label", "Badge");

    const link = document.createElementNS("http://www.w3.org/2000/svg", "a");
    link.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", document.getElementById("badgeLink").value);

    // Cria um novo elemento <image> e copia a imagem do badge para o elemento <svg>
    const svgImage = document.createElementNS("http://www.w3.org/2000/svg", "image");
    svgImage.setAttribute("x", "0");
    svgImage.setAttribute("y", "0");
    svgImage.setAttribute("width", imgElement.width);
    svgImage.setAttribute("height", imgElement.height);
    svgImage.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", imgElement.src);

    link.appendChild(svgImage);
    svg.appendChild(link);

    // Converte o elemento <svg> em uma string
    const svgContent = new XMLSerializer().serializeToString(svg);

    // Cria um Blob com o conteúdo SVG
    const svgBlob = new Blob([svgContent], { type: "image/svg+xml" });

    // Cria um link para download
    const downloadLink = document.createElement("a");
    downloadLink.download = "badge.svg"; // Nome do arquivo para download

    // Cria uma URL temporária para o Blob
    const svgUrl = URL.createObjectURL(svgBlob);

    // Define o link de download para o URL do Blob
    downloadLink.href = svgUrl;

    // Clica automaticamente no link para iniciar o download
    downloadLink.click();

    // Limpa a URL temporária após o download
    URL.revokeObjectURL(svgUrl);
});



window.onload = function () {
    createLogoOptions();
};